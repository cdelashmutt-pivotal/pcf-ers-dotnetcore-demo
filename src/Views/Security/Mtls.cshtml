<div class="card shadow" id="page-body">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">mTLS Security</h6>
    </div>
    <div class="card-body">
        <p>Applications running on TAS will have a platform generated certificate available inside the container. This certificate carries information about the app, space and org it lives in.
            For simple app-to-app security scenarios, we can restrict calls to APIs to be only available to other apps running on the platform in same space or same org. </p>
        <p>This sample will send a request to a secure endpoint of another copy of this app in same space, and return the results.</p>
        <p>If it doesn't work, ensure that both apps are in same space, and the platform is configured to forward Client certs to the app. 
            <a href="https://docs.pivotal.io/application-service/2-12/concepts/http-routing.html">See docs for more info.</a> </p>
        <hr/>
        <a href="#" class="btn btn-icon-split" v-bind:class="{ 'btn-secondary': backendReady, 'btn-warning': !backendReady}" v-on:click="sendRequest">
            <span class="icon text-white-50">
                <i class="fas" v-bind:class="{ 'fa-exchange-alt': backendReady, 'fa-exclamation-triangle': !backendReady}"></i>
            </span>
            <span class="text" v-if="backendReady">Send request</span>
            <span class="text" v-else="backendReady">Service 'ers-backend' is not running</span>
        </a>
        
        <div class="col-sm"><pre>{{ response }}</pre></div>

    </div>
    
</div>

<script>

var pageModel = new Vue({
    el: '#page-body',
    data: {
    	app: {},
        instances: {
			"test": [
				"http://localhost"
    		]},
    	response: "",
    	backendReady: false,
    	backendUrl: "",
    	
    },
    mounted: function() {
        var self = this;
        self.refresh();
        setTimeout(() => self.refresh(), 1000);
        var instanceInfoUrl = "@Url.Action("InstanceInfo", "Home")";
        $.get(instanceInfoUrl, function(appEnv) {
            self.app = appEnv;
        });
    },
    methods: {
        sendRequest: function () {
            var self = this;
            if (!self.backendReady){
                return;
            }
            $.get("@Url.Action("CallUrl","Security")?url="+ self.backendUrl + "Security/SecuredByMtls", function (results) {
                self.response = results;
            });
        },
        refresh: function () {
            		var self = this;
            		$.get("@Url.Action("GetServiceDiscoveryInstances","ServiceDiscovery")", function (results) {
        				self.instances = results;
                        var backend = self.instances["ers-backend"];
                        self.backendReady = self.instances["ers-backend"] !== undefined;
                        if (self.backendReady){
                            self.backendUrl = backend[0];
                        }
            		});
                    setTimeout(() => self.refresh(), 1000);
        		},
    }
});
</script>