<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
<!--    <IsPackable>true</IsPackable>-->
    <ImplicitUsings>true</ImplicitUsings>
    <SteeltoeVersion>4.0.323-alpha</SteeltoeVersion>

  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="EasyNetQ.DI.Microsoft" Version="7.8.0" />
    <PackageReference Include="GitInfo" Version="2.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="8.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.4" />
    <PackageReference Include="NetEscapades.Configuration.Yaml" Version="3.1.0" />
    <PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="8.0.2" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.1" />
    <PackageReference Include="YamlDotNet" Version="15.1.2" />
  </ItemGroup> 
  
  <ItemGroup>
    <PackageReference Include="Steeltoe.Discovery.HttpClients" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Connectors.EntityFrameworkCore" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Connectors" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Common.Hosting" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Discovery.Eureka" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Discovery.Configuration" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Configuration.CloudFoundry" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Configuration.ConfigServer" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Configuration.Kubernetes.ServiceBinding" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Configuration.Placeholder" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Configuration.RandomValue" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Management.Endpoint" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Management.Task" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Management.Tracing" Version="$(SteeltoeVersion)" />
    <PackageReference Include="Steeltoe.Security.Authentication.CloudFoundry" Version="$(SteeltoeVersion)" />
  </ItemGroup>

  <ItemGroup>
    <None Include="git.properties" CopyToOutputDirectory="PreserveNewest" />
    <None Update="appsettings.vcap_application.yaml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
    <None Update="vcap_services.yaml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
    <None Update="buildpack.yml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
  </ItemGroup>
  <Target Name="_GitProperties" AfterTargets="CoreCompile">
    <WriteLinesToFile File="git.properties" Lines="git.remote.origin.url=$(GitRoot)" Overwrite="true" />
    <WriteLinesToFile File="git.properties" Lines="git.build.version=$(GitBaseVersion)" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.commit.id.abbrev=$(GitCommit)" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.commit.id=$(GitSha)" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.tags=$(GitTag)" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.branch=$(GitBranch)" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.build.time=$([System.DateTime]::Now.ToString('O'))" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.build.user.name=$([System.Environment]::GetEnvironmentVariable('USERNAME'))" Overwrite="false" />
    <WriteLinesToFile File="git.properties" Lines="git.build.host=$([System.Environment]::GetEnvironmentVariable('COMPUTERNAME'))" Overwrite="false" />
  </Target>
  <ItemGroup Condition="$(LiveSync)=='true'">
    <None Include="..\..\packages\watchexec" CopyToPublishDirectory="Always" />
    <None Include="..\..\manifest-tilt.yml" CopyToPublishDirectory="Always" />
    <None Include=".ignore" CopyToPublishDirectory="Always" />
  </ItemGroup>
  <ItemGroup>
    
    <None Update="appsettings.yaml;appsettings.*.yaml" CopyToOutputDirectory="PreserveNewest" CopyToPublishDirectory="PreserveNewest" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="GeneratedCertificates" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Azure.SpringCloud.Client\Microsoft.Azure.SpringCloud.Client.csproj" />
  </ItemGroup>
  <ItemGroup>
    <_ContentIncludedByDefault Remove="Views\Management\Generic\Actuator.cshtml" />
  </ItemGroup>

</Project>